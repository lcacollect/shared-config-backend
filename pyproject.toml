[tool.poetry]
name = "lcacollect-config"
version = "1.3.1"
description = "This package contains shared config and utils to be used across LCAcollect backends."
authors = ["Christian Kongsgaard <chrk@arkitema.com>"]
repository = "https://github.com/lcacollect/shared-config-backend"
license = "LGPL-3.0-or-later"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "*"
strawberry-graphql = {extras = ["fastapi"], version = ">=0.164.0"}
fastapi-azure-auth = "*"
aiocache = "*"
SQLAlchemy = {version = ">=1.4.35", extras = ["asyncio"], optional = true}
sqlmodel = {version = ">=0.0.8", optional = true }
asyncpg = {version = "^0.26.0", optional = true }

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-env = "*"
pytest_httpx = "*"
pytest-asyncio = "*"
psycopg2-binary = "^2.9.3"
black = "^22.6.0"
mixer = "*"
isort = "^5.10.1"
pytest-mock = "^3.10.0"
pytest-cov = "^4.0.0"

[tool.poetry.group.pipeline.dependencies]
pytest-azurepipelines = "^1.0.4"

[tool.poetry.extras]
database = ["SQLAlchemy", "sqlmodel", "asyncpg"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py310']

[tool.pytest.ini_options]
addopts = "--cov=src --cov-report=term-missing --cov-branch --cov-report=xml"
asyncio_mode = "auto"
console_output_style = "count"
pythonpath = "src"
required_plugins = ["pytest-cov>=4.0.0", "pytest-azurepipelines"]
testpaths = ["tests/"]

env = [
    "SERVER_NAME=LCA Test",
    "SERVER_HOST=http://test.com",
    "PROJECT_NAME=LCA Test",
    "POSTGRES_HOST=localhost",
    "POSTGRES_USER=postgresuser",
    "POSTGRES_PASSWORD=mypassword",
    "POSTGRES_DB=lcacollect",
    "POSTGRES_PORT=5632",
    "AAD_OPENAPI_CLIENT_ID=PALCEHOLDER",
    "AAD_APP_CLIENT_ID=PALCEHOLDER",
    "AAD_TENANT_ID=PALCEHOLDER",
    "AAD_TEST_CLIENT_SECRET=PALCEHOLDER",
    "STORAGE_ACCOUNT_URL=PALCEHOLDER",
    "ROUTER_URL=http://router.url",
    "STORAGE_CONTAINER_NAME=PALCEHOLDER",
    "STORAGE_ACCESS_KEY=PLACEHOLDER",
    "STORAGE_BASE_PATH=test",
    "SPECKLE_TOKEN=PALCEHOLDER",
]

[tool.coverage.run]
omit=["src/exceptions/*.py"]